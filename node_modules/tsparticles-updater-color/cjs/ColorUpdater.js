"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ColorUpdater = void 0;
const tsparticles_engine_1 = require("tsparticles-engine");
const Utils_1 = require("./Utils");
class ColorUpdater {
    constructor(container) {
        this.container = container;
    }
    init(particle) {
        const hslColor = (0, tsparticles_engine_1.rangeColorToHsl)(particle.options.color, particle.id, particle.options.reduceDuplicates);
        if (hslColor) {
            particle.color = (0, tsparticles_engine_1.getHslAnimationFromHsl)(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);
        }
    }
    isEnabled(particle) {
        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;
        return (!particle.destroyed &&
            !particle.spawning &&
            ((color?.h.value !== undefined && hAnimation.enable) ||
                (color?.s.value !== undefined && sAnimation.enable) ||
                (color?.l.value !== undefined && lAnimation.enable)));
    }
    update(particle, delta) {
        (0, Utils_1.updateColor)(particle, delta);
    }
}
exports.ColorUpdater = ColorUpdater;
